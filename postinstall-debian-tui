#!/bin/bash

###### ADD SOURCE HERE ######
source ./source/scripts-tui.sh
######

# Root checker
function root_check() {
echo "Utilisateur du script : $(whoami)"
if [[ $EUID -ne 0 ]]; then
    echo "Accès root interdit."
    if [[ -f /usr/bin/sudo ]]; then
        echo "Sudo installé"
        is_user_sudo=$(sudo -k)
        if [[ $is_user_sudo == "" ]] ; then
            echo "Sudo configuré pour l'utilisateur."
            run_with_sudo
            exit 1
        else
        sudo_help
        fi
    else
    sudo_help
    fi
else
menu1
fi
}

function sudo_help() {

clear
echo "Le script necessite les droits d'administration pour fonctionner.
"
is_user_sudo=$(sudo -k)
if [[ $is_user_sudo == "" ]] ; then
    echo "Votre utilisateur ne fait pas partie du groupe Sudo."
    echo "Cette configuration est optionnelle mais recommandée."
    read -p "Voulez vous ajouter votre utilisateur maintenant au groupe SUDO [o/N] ? " sudo_configure
    case $sudo_configure in
    o|O)
    if [[ ! -f /usr/bin/sudo ]]; then
        echo "Sudo non installé, installation..."
        su - -c "apt install -y sudo > /dev/null"
    fi
    echo "Ajout de l'utilisateur au groupe SUDO"
    su - -c "usermod -aG sudo $(who | grep tty | cut -d " " -f 1)"
    echo "
    Vous devrez vous relogguer pour que les modifications prennent effet. Lancement du script avec root.
    "
    sleep 2
    run_script
    exit 1
    ;;
    n|N|*)
    run_script
    exit 1
    ;;
    esac
fi
run_script
exit 1
}

function run_script() {
clear
echo "Lancementdu script avec le compte ROOT "
su root -c "bash $homedir/postinstall-debian-tui"
exit 1
}

function run_with_sudo() {
echo "
Le script à besoin des droits ROOT pour fonctionner. Utilisation de sudo pour exécuter le script.
"
sudo chmod +x $homedir/postinstall-debian-tui
sudo $homedir/postinstall-debian-tui
exit 1
}

function menu1() {
clear
echo "          ------------------ POSTINSTALL DEBIAN TUI ------------------

1- Configurer SECUREBOOT et installer les Signatures 
2- Installer les drivers Nvidia
3- Installer les drivers AMD
4- Programmes Utilitaires / Additionnels 

T- Postinstall Debian TESTING / SID (Bêta)

0- Quitter

"

read -n1 -p "Choix ? " choix

case "$choix" in

1)  secureboot
    ;;
2)  nvidia1
    ;;
3)  amd1
    ;;
4)  tools1
    ;;
t|T) debian_testing
      ;;
f|F)  neofrog
      ;;
0)  export success="2"
    clear && exit 1
    ;;
*)  menu1
    ;;
esac


}

function nvidia1() {
clear
echo "          -------------------------- NVIDIA --------------------------

1- Installer driver Nvidia Stable LTS (Recommandé)
2- Autres drivers Nvidia (Pour utilisateurs Expérimentés !!)
3- Supprimer driver Nvidia

0- Retour

"

read -n1 -p "Choix ? " choix

case "$choix" in

1)  nvidia-stable
    ;;
2)  nvidia2
    ;;
3)  nvidia-rollback
    ;;
0)  menu1
    ;;
*)  nvidia1
    ;;
esac

}

function nvidia2() {
clear
echo "          -------------------------- NVIDIA - Autres Drivers --------------------------

1- Installer driver (DERNIERE VERSION) + dépôt Nvidia (Recommandé/Officiel Nvidia) (Compatible Testing/Sid/Backports)

          ----------------------- NVIDIA - Version TEST/DEV -----------------------

2- Installer driver Nvidia de Testing en pin 10 (Pour Debian Stable UNIQUEMENT !!)
3- Installer driver Nvidia Experimental (Nvidia-dev, Necessite Sid pin 10 !)

0- Retour

"

read -n1 -p "Choix ? " choix

case "$choix" in

1)  nvidia-cuda
    ;;
2)  nvidia-testing-on-stable
    ;;
3)  nvidia-experimental
    ;;
0)  menu1
    ;;
*)  nvidia2
    ;;
esac

}


function amd1() {
clear
echo "          ---------------------------- AMD ---------------------------

1- Installer Mesa Kisak Fresh
2- Installer AMD Vulkan
3- Installer ROCM opencl et ROCM HIP

0- Retour

"

read -n1 -p "Choix ? " choix

case "$choix" in

1)  mesa-kisak
    ;;
2)  amd-vulkan
    ;;
3)  rocm
    ;;
0)  menu1
    ;;
*)  amd1
    ;;
esac

}


function tools1() {
clear
echo "          ---------------------------- TOOLS --------------------------

--- Gestionnaires de paquets ---

1- Installer Deb-Get (Debian Stable uniquement)
2- Installer Pacstall (AUR pour Debian)


--- Applications Gaming ---

3- Installer Steam
4- Installer Lutris (Dépôt additionnel OBS officiel)
5- Installer Wine-Staging (Dépôt additionnel officiel)


--- Applications Supplémentaires ---

D- Installer Discord (Dépot additionnel "Javinator9889")


--- Outils Supplémentaires ---

6- Mettre à jour les Firmware-Linux à la dernière version GIT

7- Ajouter les dépôts Backports pour Debian Stable
8- Installer les repository de Sid (pin 10) 

9- Utiliser l'outil d'ajout de PPA pour Debian (EXPERTS !!)


--- Outils Laptop ---

E- Installer Envycontrol

0- Retour

"

read -n1 -p "Choix ? " choix

case "$choix" in

1)  deb-get
    ;;
2)  pacstall
    ;;
3)  steam
    ;;
4)  lutris
    ;;
d|D)  discord
    ;;
5)  wine-staging
    ;;
6)  update-firmware
    ;;
7)  backports
    ;;
8)  install-sid
    ;;
9)  add-ppa-debian
    ;;
e|E)  envycontrol
    ;;
0)  menu1
    ;;
*)  tools1
    ;;
esac

}

clear
export homedir=$(pwd)
chmod +x $homedir/data/*.sh
root_check


